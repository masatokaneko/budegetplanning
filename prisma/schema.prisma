// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 勘定科目マスタ
model Account {
  id              String    @id @default(uuid())
  code            String    @unique // 勘定科目コード
  name            String    // 勘定科目名
  type            String    // 勘定科目タイプ（cost_of_sales, selling_admin）
  category        String    // 勘定科目カテゴリ
  description     String?   // 説明
  is_active       Boolean   @default(true)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  created_by      String    // 作成者ID
  budgets         Budget[]  // 予算とのリレーション
  actuals         Actual[]  // 実績とのリレーション

  @@map("accounts")
}

// 取引先マスタ
model Vendor {
  id              String    @id @default(uuid())
  code            String    @unique // 取引先コード
  name            String    // 取引先名
  type            String    // 取引先タイプ
  description     String?   // 説明
  is_active       Boolean   @default(true)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  created_by      String    // 作成者ID
  budgets         Budget[]  // 予算とのリレーション
  actuals         Actual[]  // 実績とのリレーション

  @@map("vendors")
}

// 変動要因マスタ
model FluctuationFactor {
  id              String    @id @default(uuid())
  code            String    @unique // 変動要因コード
  name            String    // 変動要因名
  type            String    // 変動要因タイプ
  description     String?   // 説明
  is_active       Boolean   @default(true)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  created_by      String    // 作成者ID
  budgets         Budget[]  // 予算とのリレーション

  @@map("fluctuation_factors")
}

// 予算テーブル
model Budget {
  id                  String    @id @default(uuid())
  account_id          String    // 勘定科目ID
  vendor_id           String?   // 取引先ID（オプション）
  year_month          String    // 年月（YYYYMM形式）
  amount              Decimal   // 予算金額
  version             String    // 予算バージョン
  calculation_type    String    // 計算タイプ（manual, factor_linked）
  linked_factor_id    String?   // 連動変動要因ID（オプション）
  basis_value         Decimal?  // 基準値（オプション）
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt
  created_by          String    // 作成者ID
  account             Account   @relation(fields: [account_id], references: [id])
  vendor              Vendor?   @relation(fields: [vendor_id], references: [id])
  fluctuation_factor  FluctuationFactor? @relation(fields: [linked_factor_id], references: [id])

  @@unique([account_id, vendor_id, year_month, version])
  @@map("budgets")
}

// 実績テーブル
model Actual {
  id              String    @id @default(uuid())
  account_id      String    // 勘定科目ID
  vendor_id       String?   // 取引先ID（オプション）
  transaction_date DateTime // 取引日
  year_month      String    // 年月（YYYYMM形式）
  amount          Decimal   // 実績金額
  description     String?   // 説明
  source_file     String?   // 取込元ファイル名
  imported_at     DateTime? // 取込日時
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  created_by      String    // 作成者ID
  account         Account   @relation(fields: [account_id], references: [id])
  vendor          Vendor?   @relation(fields: [vendor_id], references: [id])

  @@map("actuals")
}

// ユーザーテーブル
model User {
  id              String    @id @default(uuid())
  email           String    @unique
  name            String
  role            String    // ユーザーロール
  is_active       Boolean   @default(true)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt

  @@map("users")
}

model Role {
  id          String      @id @default(cuid())
  name        String      @unique
  users       User[]
  permissions Permission[]
}

model Permission {
  id         String   @id @default(cuid())
  role       Role     @relation(fields: [roleId], references: [id])
  roleId     String
  function   Function @relation(fields: [functionId], references: [id])
  functionId String
}

model Function {
  id          String       @id @default(cuid())
  name        String
  permissions Permission[]
}

model Account {
  id            String   @id @default(cuid())
  code          String   @unique
  name          String
  category      String   // 売上原価、販管費など
  isActive      Boolean  @default(true)
  budgets       Budget[]
  actuals       Actual[]
}

model Vendor {
  id                  String   @id @default(cuid())
  code                String?  @unique
  name                String
  freeeAuxAccountName String?
  isActive            Boolean  @default(true)
  budgets             Budget[]
  actuals             Actual[]
}

model FluctuationFactor {
  id          String           @id @default(cuid())
  name        String
  unit        String
  forecasts   FactorForecast[]
  budgets     Budget[]
}

model FactorForecast {
  id          String            @id @default(cuid())
  factor      FluctuationFactor @relation(fields: [factorId], references: [id])
  factorId    String
  yearMonth   Int               // YYYYMM形式
  forecastValue Float
}

model SystemLog {
  id          String   @id @default(cuid())
  timestamp   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  actionType  String
  details     String?
} 